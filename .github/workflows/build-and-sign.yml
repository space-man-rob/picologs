name: Build and Sign Executable

on:
  push:
    branches:
      - 'release/**'

permissions:
  contents: write
  id-token: write

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: install frontend dependencies
        run: pnpm install

      - name: Extract version from tauri.conf.json and tag commit
        id: version
        run: |
          VERSION=$(node -p "require('./src-tauri/tauri.conf.json').package.version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag app-v$VERSION
          git push origin app-v$VERSION

      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Azure Code Signing (.msi)
        uses: azure/trusted-signing-action@v0.5.1
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: ${{ secrets.CODE_SIGNING_ACCOUNT_NAME }}
          certificate-profile-name: ${{ secrets.CERTIFICATE_PROFILE_NAME }}
          files-folder: 'src-tauri/target/release/bundle/msi'
          files-folder-filter: '*.msi'
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - name: Upload signed MSI to release
        uses: softprops/action-gh-release@v2
        with:
          files: src-tauri/target/release/bundle/msi/*.msi
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: app-v${{ steps.version.outputs.version }}
