name: Build and Sign Executable

on:
  push:
    branches:
      - 'release/**'

permissions:
  contents: write
  id-token: write

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (windows only)
        run: cargo install trusted-signing-cli

      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          CERTIFICATE_PROFILE_NAME: ${{ secrets.CERTIFICATE_PROFILE_NAME }}
          VITE_DISCORD_CLIENT_ID: ${{ secrets.VITE_DISCORD_CLIENT_ID }}
          VITE_DISCORD_API_ENDPOINT: ${{ secrets.VITE_DISCORD_API_ENDPOINT }}
          VITE_DISCORD_OAUTH_URL: ${{ secrets.VITE_DISCORD_OAUTH_URL }}
          VITE_DISCORD_CDN_URL: ${{ secrets.VITE_DISCORD_CDN_URL }}
          VITE_WS_URL_PROD: ${{ secrets.VITE_WS_URL_PROD }}
          VITE_WEBSITE_URL_PROD: ${{ secrets.VITE_WEBSITE_URL_PROD }}
          VITE_FLEET_VIEWER_URL: ${{ secrets.VITE_FLEET_VIEWER_URL }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
